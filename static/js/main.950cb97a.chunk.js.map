{"version":3,"sources":["App.module.css","Components/List.module.css","Components/Item.module.css","Components/PrintItemsDone.module.css","Components/Item.jsx","Components/PrintItems.jsx","Components/AddItem.jsx","Components/PrintItemsDone.jsx","Components/List.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Item","prop","className","Styles","myDiv","myItem","style","onClick","e","event","idToUpd","id","items","JSON","parse","localStorage","getItem","i","length","isDone","removeItem","setItem","stringify","update","updateState","value","delete","idToDel","newItemArray","push","deleteItem","PrintItems","input","props","map","item","inputValue","AddItem","type","onChange","target","placeholder","lastId","unshift","undefined","addNewItem","styles","done","items__done","List","bind","allItems","tmpDoneArray","tmpItemsArray","state","todoItems","todoItemsDone","this","setState","myList","PrintItemsDone","addItems","React","Component","App","app_style","app_header","content","app_footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.950cb97a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_style\":\"App_app_style__2Of1R\",\"app_header\":\"App_app_header__1YhmK\",\"app_footer\":\"App_app_footer__2X5Df\",\"content\":\"App_content__bDnS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myList\":\"List_myList__239_i\",\"items\":\"List_items__1sC0k\",\"items__done\":\"List_items__done__396hC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myItem\":\"Item_myItem__vdNFH\",\"delete\":\"Item_delete__3vRFg\",\"myDiv\":\"Item_myDiv__1Asfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"done\":\"PrintItemsDone_done__2i9A_\",\"items__done\":\"PrintItemsDone_items__done__hNOLT\"};","import React from 'react';\r\nimport Styles from './Item.module.css'\r\n\r\nfunction deleteItem(event, prop){\r\n    let idToDel = prop.id;\r\n    let items = JSON.parse(localStorage.getItem('values'));\r\n    let newItemArray = [];\r\n    for (let i = 0; i < items.length; i++){\r\n        if (items[i].id !== idToDel) newItemArray.push(items[i]);\r\n    }\r\n    localStorage.removeItem('values');\r\n    localStorage.setItem('values', JSON.stringify(newItemArray));\r\n    prop.update(JSON.parse(localStorage.getItem('values')));\r\n}\r\n\r\nfunction updateState(event, prop){\r\n    let idToUpd = prop.id;\r\n    let items = JSON.parse(localStorage.getItem('values'));\r\n    for (let i = 0; i < items.length; i++){\r\n        if (items[i].id === idToUpd) items[i].isDone = !items[i].isDone\r\n    }\r\n    localStorage.removeItem('values');\r\n    localStorage.setItem('values', JSON.stringify(items));\r\n    prop.update(JSON.parse(localStorage.getItem('values')));\r\n}\r\n\r\nfunction Item(prop){\r\n    return(\r\n        <div className={Styles.myDiv}>\r\n            <p className={`${Styles.myItem} ${prop.style} `} onClick={e => updateState(e, prop)} >{prop.value}</p>\r\n            <p className={Styles.delete} onClick={e => deleteItem(e, prop)}>delete</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;\r\n\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\nfunction PrintItems(props){\r\n    return (\r\n        props.items.map(item => <Item value={item.value} id={item.id} update={props.update}/>)\r\n    )\r\n}\r\n\r\nexport default PrintItems;","import React from 'react';\r\nimport './AddItem.module.css'\r\n\r\nlet inputValue = '';\r\nlet input;\r\n\r\n\r\nfunction addNewItem(event, prop){\r\n\r\n    if (inputValue.length !== 0){\r\n        let items = JSON.parse(localStorage.getItem('values'));\r\n        let lastId = items.length === 0 ? -1 : items[0].id\r\n        items.unshift({\r\n            id: lastId + 1,\r\n            value: inputValue,\r\n            isDone: false,\r\n        })\r\n        localStorage.removeItem('values');\r\n        localStorage.setItem('values', JSON.stringify(items));\r\n        prop.update(JSON.parse(localStorage.getItem('values')));\r\n    }\r\n    if (input !== undefined) input.value = '';\r\n    inputValue = '';\r\n\r\n}\r\n\r\nfunction handleChange(event) {\r\n    inputValue = event.target.value;\r\n    input = event.target;\r\n}\r\n\r\nfunction AddItem(prop){\r\n    return(\r\n        <div>\r\n            <input type='text' onChange={e => handleChange(e)} placeholder='type here...' id='myInput'/>\r\n            <button onClick={e => addNewItem(e, prop)}>New TODO!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport Item from './Item'\r\nimport styles from './PrintItemsDone.module.css'\r\n\r\nfunction PrintItems(props){\r\n    return (\r\n        <div className={styles.done}>\r\n            {props.items.map(item => <Item style={styles.items__done} value={item.value} id={item.id} isDone={item.isDone} update={props.update}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrintItems;","import React from 'react';\r\nimport PrintItems from './PrintItems'\r\nimport AddItem from './AddItem'\r\nimport PrintItemsDone from './PrintItemsDone'\r\nimport Styles from './List.module.css'\r\n\r\n\r\nclass List extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.update = this.update.bind(this);\r\n        if (localStorage.getItem('values') === null){\r\n            localStorage.setItem('values', JSON.stringify([{\r\n                id:0,\r\n                value: 'Open TODO list',\r\n                isDone: false,\r\n            }]));\r\n        }\r\n        let allItems = JSON.parse(localStorage.getItem('values'));\r\n        let tmpDoneArray = [];\r\n        let tmpItemsArray = [];\r\n        for (let i = 0; i < allItems.length; i++){\r\n            allItems[i].isDone? tmpDoneArray.push(allItems[i]): tmpItemsArray.push(allItems[i]);\r\n        }\r\n        this.state = {\r\n            todoItems: tmpItemsArray,\r\n            todoItemsDone: tmpDoneArray,\r\n        };\r\n    }\r\n\r\n    update(items){\r\n        let tmpDoneArray = [];\r\n        let tmpItemsArray = [];\r\n        for (let i = 0; i < items.length; i++){\r\n            items[i].isDone? tmpDoneArray.push(items[i]): tmpItemsArray.push(items[i]);\r\n        }\r\n        this.setState({\r\n            todoItems: tmpItemsArray,\r\n            todoItemsDone: tmpDoneArray,\r\n        })\r\n    }\r\n\r\n    render(props){\r\n        return (\r\n            <div className={Styles.myList}>\r\n                <div className={Styles.items}>\r\n                    <PrintItems  items = {this.state.todoItems} update={this.update} />\r\n                </div>\r\n                <div className={Styles.items__done}>\r\n                    <PrintItemsDone className={Styles.items__done} items = {this.state.todoItemsDone} update={this.update} />\r\n                </div>\r\n                <AddItem className={Styles.addItems} update={this.update}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default List;","import React from 'react';\nimport styles from './App.module.css';\nimport List from './Components/List';\n\nfunction App() {\n  return (\n    <div className={styles.app_style}>\n      <header className={styles.app_header}>Hello! This is your TODO-list:</header>\n      <div className={styles.content}>\n        <List className={styles.content}/>\n      </div> \n      <footer className={styles.app_footer}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}